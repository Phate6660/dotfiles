#  ██▒   █▓ ▄▄▄       ██▓     ██▓    ▓█████▓██   ██▓
# ▓██░   █▒▒████▄    ▓██▒    ▓██▒    ▓█   ▀ ▒██  ██▒
#  ▓██  █▒░▒██  ▀█▄  ▒██░    ▒██░    ▒███    ▒██ ██░
#   ▒██ █░░░██▄▄▄▄██ ▒██░    ▒██░    ▒▓█  ▄  ░ ▐██▓░
#    ▒▀█░   ▓█   ▓██▒░██████▒░██████▒░▒████▒ ░ ██▒▓░
#    ░ ▐░   ▒▒   ▓▒█░░ ▒░▓  ░░ ▒░▓  ░░░ ▒░ ░  ██▒▒▒
#    ░ ░░    ▒   ▒▒ ░░ ░ ▒  ░░ ░ ▒  ░ ░ ░  ░▓██ ░▒░
#      ░░    ░   ▒     ░ ░     ░ ░      ░   ▒ ▒ ░░
#       ░        ░  ░    ░  ░    ░  ░   ░  ░░ ░
#      ░                                    ░ ░
# This file was made and edited with:
# - Emacs
# - Geany
# - GNU Sed
# - Nano
# - Vim
# Created by: https://github.com/Phate6660

## Check if interactive.
if [[ $- != *i* ]] ; then
	return
fi

## Autostart
# Enable completition
source /etc/bash/bashrc.d/bash_completion.sh

# McFly
if [[ -r /home/valley/.mcfly.bash ]]; then
  source /home/valley/.mcfly.bash
fi

# check and change (if needed) window size after every command finishes
shopt -s checkwinsize

## Environmental Variables
# General
export PATH="$PATH:$HOME/.cargo/bin:$HOME/scripts:$HOME/.local/bin:$HOME/.gem/ruby/2.5.0/bin:$HOME/go/bin"
# Prompt example (you can't tell in here, but there is color):
# [11:21 PM]-[Tue Dec 10]
# [valley@gentoo]
# [~]-[0]-> 
export PS1="\[$(tput bold)\][\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;99m\]\@\[$(tput bold)\]\[$(tput sgr0)\]\[\033[38;5;15m\]]-[\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;51m\]\d\[$(tput bold)\]\[$(tput sgr0)\]\[\033[38;5;15m\]]\[$(tput sgr0)\]\n\[$(tput bold)\][\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;118m\]\u\[$(tput bold)\]\[$(tput sgr0)\]\[\033[38;5;15m\]@\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;69m\]\h\[$(tput bold)\]\[$(tput sgr0)\]\[\033[38;5;15m\]]\[$(tput sgr0)\]\n\[$(tput bold)\][\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;244m\]\W\[$(tput sgr0)\]\[\033[38;5;15m\]]\[$(tput bold)\]\[$(tput sgr0)\]\[\033[38;5;255m\]-\[$(tput sgr0)\]\[\033[38;5;15m\][\[$(tput sgr0)\]\[$(tput sgr0)\]\[\033[38;5;51m\]\$?\[$(tput bold)\]\[$(tput sgr0)\]\[\033[38;5;15m\]]\[$(tput sgr0)\]\[\033[38;5;255m\]-\[$(tput sgr0)\]\[\033[38;5;226m\]> \[$(tput sgr0)\]"
export LS_COLORS="$(vivid generate molokai)" # Set LS_COLORS to colors generated by https://github.com/sharkdp/vivid
export EDITOR="/usr/bin/emacs"
export SUDO_EDITOR="/usr/bin/emacs"
export HISTCONTROL="$HISTCONTROL erasedups:ignoreboth" 
export PASTEL_COLOR_MODE=24bit # For https://github.com/sharkdp/pastel
export LIBAACS_PATH=libmmbd
export LIBBDPLUS_PATH=libmmbd
export ANIME="/mnt/ehdd/Videos/Anime"
export MUSIC="/mnt/ehdd2/Music"

## Functions
# Obtain the weather in your terminal. Change [REDACTED] to either your town, zip code, coordinates, or IP Address.
wttr() {
    local request="wttr.in/${1-[REDACTED]?u}"
    [ "$COLUMNS" -lt 125 ] && request+='?n'
    curl -H "Accept-Language: ${LANG%_*}" --compressed "$request"
}

# How much music. Example output:
# You have:
# ---------
# 116 artists.
# 845 albums.
# 8878 songs.
#
# Which uses up 169GB of storage.
# Also, you have played 17203 complete songs.
#
# Now playing: Prison Song by System Of A Down
# ============================================
# Note: You may need to change some things, like the music directory and the libre.fm user url.
hmm () {
    artists="$(mpc list Artist | sed '/^\s*$/d' | wc -l) artists."
    albums="$(mpc list Album | sed '/^\s*$/d' | wc -l) albums."
    songs="$(mpc list Title | sed '/^\s*$/d' | wc -l) songs."
    size="Which uses up $(\du -hs /mnt/ehdd2/Music | cut -c 1-4)B of storage."
    amount="Also, you have played $(w3m -dump https://libre.fm/user/phate6660/stats | grep Total | sed "s/[^0-9]//g") complete songs."
    status="$(w3m -dump https://libre.fm/user/phate6660/ | grep "playing" | sed 's/×\ //g')"
    echo -e "\nYou have:\n---------\n$artists\n$albums\n$songs\n\n$size\n$amount\n\n$status\n"
}

# Play a song via youtube search. Example: play world coming down type o negative
play() {
    search=$@
    search=${search// /+}
    mpv ytdl://ytsearch:"$search" --ytdl-format bestaudio
}

# Play a playlist in mpv, but reverse it beforehand
reverse() {
    mpv "$1" --ytdl-raw-options=playlist-reverse=
}

# Neatly output contents of $PATH.
lspath() { echo -e "$(echo "$PATH" | sed 's/\:/\\n/g')"; }

# Function to list all files in $PWD.
list(){ for file in *; do printf '%s\n' "$file"; done; }

# With arguments, play video with mpv. Without arguments, open invido.us in firefox.
yt() { if [ -z ${1+x} ]; then firefox --new-tab invidio.us; else mpv "$1"; fi; }

# Use python as a calculator. Example: calc 2*3+4/5-6
calc() { python -c "print($@)"; }

pvre() {
    sudo protonvpn d
    sudo protonvpn c -f
    sudo protonvpn s
    read -p 'Press [ENTER] to continue.'
    speedtest-cli --secure --no-upload
}

pvp2p() {
    sudo protonvpn d
    sudo protonvpn c --p2p
    sudo protonvpn s
}

# Compare 2 directories for differences. There will be no output if both directories are identical. Includes subdirectories too.
# Example: atts $HOME/example $HOME/example2
atts() { diff -r -q "$@"; }

# Set (U)XTerm title
title() { echo -ne "\033]2;$@\007"; }

## Aliases
alias rsfetch="rsfetch -PdbcehklrstuU@w -C 0 -L /home/valley/downloads/ascii/dragon_with_sign -m mpd -p portage"
alias rsfetch_logo="\rsfetch -PdeHklrstuU@w -C 0 -m mpd -p portage -L /home/valley/downloads/ascii/girl5" # Shameless self-advertizing: https://github.com/rsfetch/rsfetch
alias onefetch="onefetch -i '/home/valley/downloads/Yes Yes(nat the lich.jpg'"
alias myip="curl --silent https://ipecho.net/plain; echo" # Display public IP Address.
alias ss="ss -ntlp"
alias aria="aria2c -c -j16 -x16 -s16 -k 1M" # aria > wget/curl | fite me
alias e="emacs"
alias glog="git log --graph --pretty=\"%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\" --stat"
alias tokei="tokei --files --sort code"
alias remacs="RUST_BACKTRACE=1 remacs -q"

alias top="btm -af" # use bottom instead of top, show average cpu loads and use F temp
alias find="fd -a -j5" # use fd instead of find, show absolute paths and use 5 threads
alias grep="rg -i --color=auto" # use ripgrep instead of grep, ignore case differences and automatically use color
alias ls="ls -Fa --color=auto" # append indicators to filenames, show all files, automatically use color
alias cat="bat -p" # use bat instead of cat, use plain output (e.g. no headers or line numbers)
alias mkdir='mkdir -pv' # make any necessary parent directories, show verbose output
alias mv="mv -iv" # interactive and verbose
alias cp="xcp -vw 5" # use xcp instead of cp, verbose output and 5 workers (threads)
alias rm="rm -iv" # interactive and verbose
alias ps="ps auxf" # # show all processes, display user-oriented format, show processes that aren't attached to ttys, use full-format listing
alias pse="\ps -e --forest" # list processes as a tree
alias psg="\ps aux | grep -v grep | grep -i -e VSZ -e" # search for a running process. example: psg firefox
alias psr="\ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head" # list top 10 cpu-intensive processes
alias pst="\ps -eo pid,comm,lstart,etimes,time,args"

alias lyrics='ncmpcpp -c ~/.ncmpcpp/config-lyrics' # launch my ncmpcpp config for lyric viewing
alias scriblog='clear; tail -f ~/.mpdscribble/mpdscribble.log' # tail my music-scrobbling log

alias ytdl='youtube-dl' # I'm lazy.

alias pvpn="sudo protonvpn" # Another case of me being lazy.
alias pvstat="sudo protonvpn s" # Check ProtonVPN's status.
alias speed="speedtest-cli --secure --no-upload" # Speed test. Uses only https and only tests download speed.

## Source distro-specific files for functions and aliases.
source "$HOME/.gentoo"
# source "$HOME/.alpine"
# source "$HOME/.mint"
